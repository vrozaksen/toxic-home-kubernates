---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: storage
  values:
    controllers:
      jellyfin:
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 44 # video
              - 109 # render
        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.10.6@sha256:96b09723b22fdde74283274bdc1f63b9b76768afd6045dd80d4a4559fc4bb7f3
            env:
              TZ: ${TIMEZONE}
              JELLYFIN_PublishedServerUrl: https://jf.${SECRET_DOMAIN}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 8Gi
                gpu.intel.com/i915: 1
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_JELLYFIN_ADDR}
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: jellyfin.png
          gethomepage.dev/name: Jellyfin
          gethomepage.dev/group: Video
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: jellyfin
          gethomepage.dev/widget.url: http://jellyfin.media.svc.cluster.local:8096
        #  gethomepage.dev/widget.key: '{{ "{{HOMEPAGE_VAR_JELLYFIN_API_KEY}}" }}'
        hosts:
          - host: jf.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      jellyfin-cache:
        existingClaim: jellyfin-cache
        globalMounts:
          - path: /cache
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      transcode:
        type: emptyDir
        sizeLimit: 10Gi
        globalMounts:
          - path: /transcode
      media:
        type: nfs
        server: aincrad.home.arpa
        path: ${SECRET_NFS_DATA}
        globalMounts:
          - path: /data
            subPath: media
            #readOnly: true
